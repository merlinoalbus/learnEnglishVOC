NOME FILE: AppLayout.tsx

import React from "react"; import { useAppContext } from "../contexts/AppContext"; import { useAuth } from "../hooks/integration/useAuth"; import { getCurrentAuthUser } from "../services/authService"; import { AppHeader } from "../components/layout/AppHeader"; import { AppNavigation } from "../components/layout/AppNavigation"; import { Footer } from "../components/layout/Footer"; import { BackgroundParticles } from "../components/ui/BackgroundParticles"; import { NotificationToast } from "../components/ui/NotificationToast"; import { GlobalModals } from "../components/modals/GlobalModals"; interface AppLayoutProps { children: React.ReactNode; } export const AppLayout: React.FC<AppLayoutProps> = ({ children }) => { const { testMode, showResults } = useAppContext(); const { isAuthenticated, user } = useAuth(); const globalAuthState = (window as any).globalAuthState || { lastUser: null }; const effectiveUser = user || globalAuthState.lastUser; const effectiveAuthUser = effectiveUser ? getCurrentAuthUser() : null; const effectiveIsAuthenticated = isAuthenticated || (!!effectiveUser && !!effectiveAuthUser); const [forceRender, setForceRender] = React.useState(0); React.useEffect(() => { const handleGlobalAuthChange = () => { setForceRender(prev => prev + 1); }; window.addEventListener('globalAuthStateChanged', handleGlobalAuthChange); return () => window.removeEventListener('globalAuthStateChanged', handleGlobalAuthChange); }, []); const layoutKey = effectiveUser?.id || user?.id || 'no-user'; return ( <div key={layoutKey} className="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50 dark:from-gray-900 dark:via-gray-800 dark:to-slate-900"> } <NotificationToast /> } {effectiveIsAuthenticated && ( <> <div className="app-header-section"> <div className="app-container-header"> <AppHeader /> </div> </div> <div className="app-navigation-section"> <div className="app-container"> <AppNavigation /> </div> </div> </> )} } {effectiveIsAuthenticated && ( <Footer className="mt-auto" /> )} </div> </div> ); };

================================================================================

NOME FILE: AuthLayout.tsx

import React from "react"; import { Card, CardContent, CardHeader, CardTitle, } from "../components/ui/card"; import { Brain, Sparkles } from "lucide-react"; interface AuthLayoutProps { children: React.ReactNode; title: string; subtitle?: string; showLogo?: boolean; } export const AuthLayout: React.FC<AuthLayoutProps> = ({ children, title, subtitle, showLogo = true, }) => { return ( <div className="min-h-screen flex items-center justify-center p-4 bg-gradient-to-br from-blue-50 via-white to-purple-50"> } {showLogo && ( <div className="text-center mb-8"> <div className="inline-flex items-center gap-3 px-6 py-3 bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/50"> <Brain className="w-8 h-8 text-blue-600" /> <span className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent"> Vocabulary Master </span> <Sparkles className="w-6 h-6 text-purple-600" /> </div> </div> )} } <div className="text-center mt-6"> <p className="text-sm text-gray-500"> Vocabulary Master - La tua app intelligente per imparare l'inglese </p> </div> </div> </div> ); };

================================================================================

